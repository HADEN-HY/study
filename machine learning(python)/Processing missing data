# 1. 필요한 라이브러리 임포트하기
import numpy as np
import pandas as pd
from sklearn.impute import SimpleImputer  # 누락된 데이터를 처리하기 위한 클래스

# 2. CSV 파일을 이용해 데이터 세트를 데이터프레임으로 로드하기
dataset = pd.read_csv('pima-indians-diabetes.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values
# 3. 데이터 세트에서 누락된 데이터 확인하기
# 각 열에 존재하는 누락된 값의 개수를 출력하여 확인합니다.
print("각 열의 누락된 값 개수:")
print(dataset.isnull().sum())

# ※ 분석:
# 누락된 데이터는 머신러닝 모델 훈련 시 성능 저하 및 부정확한 예측을 초래할 수 있습니다.
# 따라서 적절한 처리(예: 평균값 대체, 중간값 대체, 행/열 삭제 등)를 반드시 수행해야 합니다.
from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy='mean')
imputer.fit(X[:, 1:3])
X[:, 1:3] = imputer.transform(X[:, 1:3])
# 4. 누락된 데이터를 평균값으로 대체하는 처리 전략 구현
# (참고: 누락된 데이터를 중간값이나 상수값으로 대체하는 방법, 또는 누락된 데이터가 있는 행/열을 삭제하는 방법도 있음)

# 5. SimpleImputer 클래스의 인스턴스를 구성하여 누락된 데이터를 열의 평균값으로 대체하도록 설정
imputer = SimpleImputer(missing_values=np.nan, strategy='mean')

# 6. 특성행렬의 수치형 열 선택 및 SimpleImputer의 fit 메서드 적용
# 여기서는 종속 변수(마지막 열)를 제외한 모든 열을 특성행렬(x)로 간주합니다.
x = dataset.iloc[:, :-1].values
imputer.fit(x)

# 7. SimpleImputer의 transform 메서드를 이용해 누락된 데이터를 평균값으로 대체
x = imputer.transform(x)

# 8. 대체된 결과를 원래 데이터셋의 특성 부분에 업데이트 (선택 사항)
dataset.iloc[:, :-1] = x

# 9. 업데이트된 특성행렬을 출력하여 누락된 데이터가 올바르게 대체되었는지 확인
print("\n누락된 데이터를 평균값으로 대체한 후의 특성행렬 (x):")
print(x)
